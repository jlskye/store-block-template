# To really understand GraphQL, go to https://graphql.org/learn/

type Product {
  authors: [String!]
  cacheId: ID!
  id: ID!
  name: String
}

# It is necessary to generate input types for creating products
# ref: http://graphql.org/graphql-js/mutations-and-input-types/
input ProductInput {
  authors: [String!]
  cacheId: ID
  id: ID
  name: String
}

type Query {
  # Cache control can only be set at root fields
  product(id: ID!): Product
  products(from: Int = 0, to: Int = 4): [Product] @cacheControl(scope: PUBLIC, maxAge: SHORT)
  total: Int

  """
  Returns a markdown source given an id
  """
  source(id: ID!): String
}

type Mutation {
  # You should always return the whole object in a mutation, not only a boolean. This will help in browser caching
  delete(id: String): Boolean
  editProduct(id: ID!, product: ProductInput!): Product
  newProduct(product: ProductInput!): Product
}
